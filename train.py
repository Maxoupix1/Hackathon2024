import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix, fbeta_score
from scipy.signal import medfilt
from sklearn.preprocessing import LabelEncoder

# Charger les donn√©es d'entra√Ænement
training_data = pd.read_csv('training_data_second.csv')

print("3. R√©√©chantillonnage termin√©")
print(training_data.head())

# S√©lectionner les colonnes de caract√©ristiques et l'√©tiquette
X = training_data[['acc_x_right', 'acc_y_right', 'acc_z_right', 'acc_x_left', 'acc_y_left', 'acc_z_left']]
y = training_data['activity']

# Supprimer les lignes avec des valeurs manquantes
X = X.dropna()
y = y.dropna()

# Assurer que X et y ont des index align√©s apr√®s suppression des valeurs manquantes
aligned_data = X.join(y, how='inner')

# S√©parer √† nouveau les caract√©ristiques et l'√©tiquette
X = aligned_data[['acc_x_right', 'acc_y_right', 'acc_z_right', 'acc_x_left', 'acc_y_left', 'acc_z_left']]
y = aligned_data['activity']

print("4. Pr√©traitement des donn√©es termin√©")

# Diviser les donn√©es en ensembles d'entra√Ænement et de test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("5. Division des donn√©es termin√©")

# Entra√Æner le mod√®le
clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train, y_train)

print("6. Mod√®le entra√Æn√©")

# Pr√©dictions sur l'ensemble de test
y_pred_test = clf.predict(X_test)

# Calculer le FùõΩ-measure avec ùõΩ = 1/3
fbeta_test = fbeta_score(y_test, y_pred_test, beta=1/3, average='weighted')

# Afficher la matrice de confusion et le rapport de classification pour l'ensemble de test
print("7. Evaluation sur l'ensemble de test")
print("Matrice de confusion :\n", confusion_matrix(y_test, y_pred_test))
print("Rapport de classification :\n", classification_report(y_test, y_pred_test))
print(f'FùõΩ-measure (ùõΩ=1/3) : {fbeta_test:.4f}')

# Charger les donn√©es de pr√©diction
prediction_data = pd.read_csv('prediction_data.csv')

print("8. Donn√©es de pr√©diction charg√©es")

# Convertir la colonne 'time' en format datetime
prediction_data['time'] = pd.to_datetime(prediction_data['time'])

print("9. Conversion de 'time' en format datetime pour les donn√©es de pr√©diction")

# R√©√©chantillonner les donn√©es √† une fr√©quence d'une seconde
prediction_data = prediction_data.set_index('time').resample('1S').first().dropna().reset_index()

print("10. R√©√©chantillonnage des donn√©es de pr√©diction termin√©")

# S√©lectionner les colonnes de caract√©ristiques
X_pred = prediction_data[['acc_x_right', 'acc_y_right', 'acc_z_right', 'acc_x_left', 'acc_y_left', 'acc_z_left']]

# Pr√©dictions sur l'ensemble de pr√©diction
y_pred = clf.predict(X_pred)

print("11. Pr√©dictions sur l'ensemble de pr√©diction termin√©es")

# Encoder les pr√©dictions pour appliquer le filtre m√©dian
label_encoder = LabelEncoder()
y_pred_encoded = label_encoder.fit_transform(y_pred)

# Appliquer un filtre m√©dian pour lisser les pr√©dictions
y_pred_smoothed_encoded = medfilt(y_pred_encoded, kernel_size=3)

# D√©coder les pr√©dictions liss√©es
y_pred_smoothed = label_encoder.inverse_transform(y_pred_smoothed_encoded)

# Ajouter les pr√©dictions liss√©es aux donn√©es de pr√©diction
prediction_data['activity'] = y_pred_smoothed

# Filtrer les donn√©es pour inclure celles jusqu'√† 19h00:00 
cutoff_time = pd.to_datetime('2024-07-25 19:00:00') 
prediction_data = prediction_data[prediction_data['time'] <= cutoff_time]

print("12. Filtrage des donn√©es au-del√† de 19h termin√©")

# Cr√©er la sortie au format sp√©cifi√©
output = prediction_data[['time', 'activity']].copy()
output['time'] = output['time'].dt.strftime('%H:%M:%S')
output['activity'] = output['activity'].fillna('none')

print("13. Cr√©ation de la sortie au format sp√©cifi√©")

# Afficher les premi√®res lignes de la sortie pour v√©rification
print(output.head())

# Sauvegarder la sortie dans un fichier CSV
output.to_csv('prediction_output.csv', index=False)

print('Les pr√©dictions ont √©t√© r√©alis√©es et le fichier a √©t√© sauvegard√© avec succ√®s.')
